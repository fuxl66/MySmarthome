[WS]
	[[Temperatur]]
		type = num
		knx_dpt = 9
		knx_cache = 3/0/40
		visu_acl = rw
		sqlite = yes
		[[[GW1]]]
			type = bool
			knx_dpt = 1
			knx_cache = 3/0/41
			visu_acl = rw
			sqlite = yes
			[[[[Uhr]]]]
				type = foo
				eval = sh.WS.Temperatur.GW1.last_change()
				eval_trigger = WS.Temperatur.GW1
				enforce_updates = true
				visu_acl = rw
		[[[GW2]]]
			type = bool
			knx_dpt = 1
			knx_cache = 3/0/42
			visu_acl = rw
			sqlite = yes
			[[[[Uhr]]]]
				type = foo
				eval = sh.WS.Temperatur.GW2.last_change()
				eval_trigger = WS.Temperatur.GW2
				enforce_updates = true
				visu_acl = rw
		[[[GW3]]]
			type = bool
			knx_dpt = 1
			knx_cache = 3/0/47
			visu_acl = rw
			sqlite = yes
			[[[[Uhr]]]]
				type = foo
				eval = sh.WS.Temperatur.GW3.last_change()
				eval_trigger = WS.Temperatur.GW3
				enforce_updates = true
				visu_acl = rw
		[[[GW4]]]
			type = bool
			knx_dpt = 1
			knx_cache = 3/0/48
			visu_acl = rw
			sqlite = yes
			[[[[Uhr]]]]
				type = foo
				eval = sh.WS.Temperatur.GW4.last_change()
				eval_trigger = WS.Temperatur.GW4
				enforce_updates = true
				visu_acl = rw
		[[[MIN]]]
			type = num
			knx_dpt = 9
			eval = sh.WS.Temperatur.db('min', '12h')
			crontab = init | 0,30 * * * = 1
#			eval_trigger = WS.Temperatur
			visu_acl = rw
			sqlite = yes
			enforce_updates = true
		[[[MINUhr]]]
			type = foo
			eval = sh.WS.Temperatur.MIN.last_change()
			eval_trigger = WS.Temperatur.Min
			enforce_updates = true
			visu_acl = rw
			cache = True
		[[[MAX]]]
			type = num
			knx_dpt = 9
			eval = sh.WS.Temperatur.db('max', '12h')
			crontab = init | 0,30 * * * = 1
#			eval_trigger = WS.Temperatur
			visu_acl = rw
			sqlite = yes
			enforce_updates = true
		[[[MAXUhr]]]
			type = foo
			eval = sh.WS.Temperatur.MAX.last_change()
			eval_trigger = WS.Temperatur.Max | WS.Temperatur
			enforce_updates = true
			visu_acl = rw
			cache = True
		[[[Stoerung]]]
			type = bool
			knx_dpt = 1
			knx_cache = 3/0/46
			visu_acl = rw
	[[Windstaerke]]
		type = num
		knx_dpt = 9
		knx_cache = 3/0/50
		visu_acl = rw
		sqlite = yes
		[[[kmH]]]
			type = num
			knx_dpt = 9
			visu_acl = rw
			sqlite = yes
			eval = (sh.WS.Windstaerke() * 3.6)
#			eval = round((sh.WS.Windstaerke() * 3.6), 1)
			eval_trigger = WS.Windstaerke
			enforce_updates = true
		[[[GW1]]]
			type = bool
			knx_dpt = 1
			knx_cache = 3/0/51
			visu_acl = rw
			sqlite = yes
			enforce_updates = true
			[[[[Info]]]]
				type = str
				visu_acl = rw
				enfore_updates = yes
		[[[GW1Uhr]]]
			type = foo
			eval = sh.WS.Windstaerke.GW1.last_change()
			eval_trigger = WS.WS.Windstaerke.GW1
			enforce_updates = true
			visu_acl = rw
		[[[GW2]]]
			type = bool
			knx_dpt = 1
			knx_cache = 3/0/52
			visu_acl = rw
			sqlite = yes
			enforce_updates = true
			[[[Sperre]]]
				type = bool
				knx_dpt = 1
				knx_send = 3/0/55
				knx_cache = 3/0/55
				visu_acl = rw
		[[[GW2Uhr]]]
			type = foo
			eval = sh.WS.Windstaerke.GW2.last_change()
			eval_trigger = WS.WS.Windstaerke.GW2
			enforce_updates = true
			visu_acl = rw
		[[[MAX]]]
			type = num
			knx_dpt = 9
			eval = round((sh.WS.Windstaerke.kmH.db('max', '12h')), 1)
#			eval_trigger = WS.Windstaerke.kmH
			crontab = init | 0,30 * * * = 1
			visu_acl = rw
			sqlite = yes
			enforce_updates = true
		[[[MAXUhr]]]
			type = foo
			eval = sh.WS.Windstaerke.MAX.last_change()
			eval_trigger = WS.Windstaerke.MAX
			enforce_updates = true
			visu_acl = rw
		[[[Stoerung]]]
			type = bool
			knx_dpt = 1
			knx_cache = 3/0/56
			visu_acl = rw
	[[Helligkeit]]
		type = num
		knx_dpt = 9
		knx_cache = 3/0/60
		visu_acl = rw
		sqlite = yes
		[[[GW1]]]
			type = bool
			knx_dpt = 1
			knx_cache = 3/0/61
			visu_acl = rw
			sqlite = yes
			[[[[Info]]]]
				type = str
				visu_acl = rw
				enfore_updates = yes
			[[[[Uhr]]]]
				type = foo
				eval = sh.WS.Helligkeit.GW1.last_change()
				eval_trigger = WS.Helligkeit.GW1
				enforce_updates = true
				visu_acl = rw
				cache = yes
		[[[GW2]]]
			type = bool
			knx_dpt = 1
			knx_cache = 3/0/62
			visu_acl = rw
			sqlite = yes
			[[[[Uhr]]]]
				type = foo
				eval = sh.WS.Helligkeit.GW2.last_change()
				eval_trigger = WS.Helligkeit.GW2
				enforce_updates = true
				visu_acl = rw
				cache = yes
	[[Daemmerung]]
		[[[GW1]]]
			type = bool
			knx_dpt = 1
			knx_cache = 3/0/65
			visu_acl = rw
			sqlite = yes
		[[[GW2]]]
			type = bool
			knx_dpt = 1
			knx_cache = 3/0/66
			visu_acl = rw
			sqlite = yes
			[[[[Uhr]]]]
				type = foo
				eval = sh.WS.Daemmerung.GW2.last_change()
				eval_trigger = WS.Daemmerung.GW2
				enforce_updates = true
				visu_acl = rw
		[[[GW3]]]
			type = bool
			knx_dpt = 1
			knx_cache = 3/0/67
			visu_acl = rw
			sqlite = yes
	[[Regen]]
		type = bool
		knx_dpt = 1
		knx_cache = 3/0/20
		visu_acl = rw
		sqlite = yes
		[[[Info]]]
			type = str
			visu_acl = rw
			enfore_updates = yes
		[[[Uhr]]]
			type = foo
			eval = sh.WS.Regen.last_change()
			eval_trigger = WS.Regen
			enforce_updates = true
			visu_acl = rw
		[[[Uhr2]]]
			type = foo
			eval = sh.WS.Regen.prev_change()
			eval_trigger = WS.Regen
			enforce_updates = true
			visu_acl = rw
	[[TagNacht]]
		type = bool
		knx_dpt = 1
		knx_cache = 3/0/21
		visu_acl = rw
		sqlite = yes
		[[[Uhr]]]
			type = foo
			eval = sh.WS.TagNacht.last_change()
			eval_trigger = WS.TagNacht
			enforce_updates = true
			visu_acl = rw
		[[[Uhr2]]]
			type = foo
			eval = sh.WS.TagNacht.prev_change()
			eval_trigger = WS.TagNacht
			enforce_updates = true
			visu_acl = rw
	[[GPSStoerung]]
		type = bool
		knx_dpt = 1
		knx_cache = 3/0/12
		visu_acl = rw
	[[SonneAnzimut]]
		type = num
		knx_dpt = 14
		knx_cache = 3/0/97
		visu_acl = rw
		sqlite = yes
	[[SonneElevation]]
		type = num
		knx_dpt = 14
		knx_cache = 3/0/98
		visu_acl = rw
		sqlite = yes
		[[[RoundAktuell]]]
			type = num
			knx_dpt = 14
			eval = round(sh.WS.SonneElevation(), 1)
			eval_trigger = WS.SonneElevation
			enforce_updates = true
			visu_acl = rw
#		[[[MaxGestern]]]
#			type = num
#			knx_dpt = 14
#			eval = round(sh.WS.SonneElevation.db('max', '2d', '1d'), 1)
#			eval_trigger = WS.SonneElevation
#			enforce_updates = true
#			visu_acl = rw
	[[Fassade]]
		[[[Sued]]]
			[[[[Status]]]]
				type = bool
				knx_dpt = 1
				knx_cache = 3/0/103
				visu_acl = rw
			[[[[position]]]]
				type = num
				knx_dpt = 5001
				knx_cache = 3/0/100
				knx_send = 3/0/100
				visu_acl = rw
			[[[[angle]]]]
				type = num
				knx_dpt = 5001
				knx_cache = 3/0/101
				knx_send = 3/0/101
				visu_acl = rw
			[[[[EinAus]]]]
				type = bool
				eval = 1 if sh.WS.Fassade.SperreSEG() == 0 and sh.WS.Fassade.Sued.Status() == 1 and sh.WS.UNDLogikSperre() == 0 else 0
				eval_trigger = WS.Fassade.SperreSEG | WS.Fassade.Sued.Status | WS.UNDLogik2Sperre
				visu_acl = rw
				enforce_updates = true
		[[[SuedWest]]]
			[[[[Status]]]]
				type = bool
				knx_dpt = 1
				knx_cache = 3/0/133
				visu_acl = rw
			[[[[position]]]]
				type = num
				knx_dpt = 5001
				knx_cache = 3/0/130
				knx_send = 3/0/130
				visu_acl = rw
			[[[[angle]]]]
				type = num
				knx_dpt = 5001
				knx_cache = 3/0/131
				knx_send = 3/0/131
				visu_acl = rw
			[[[[EinAus]]]]
				type = bool
				eval = 1 if sh.WS.Fassade.SperreSW() == 0 and sh.WS.Fassade.SuedWest.Status() == 1 and sh.WS.UNDLogikSperre() == 0 else 0
				eval_trigger = WS.Fassade.SperreSW | WS.Fassade.SuedWest.Status | WS.UNDLogik2Sperre
				visu_acl = rw
				enforce_updates = true
		[[[Ost]]]
			[[[[Status]]]]
				type = bool
				knx_dpt = 1
				knx_cache = 3/0/113
				visu_acl = rw
			[[[[position]]]]
				type = num
				knx_dpt = 5001
				knx_cache = 3/0/110
				knx_send = 3/0/110
				visu_acl = rw
			[[[[angle]]]]
				type = num
				knx_dpt = 5001
				knx_cache = 3/0/111
				knx_send = 3/0/111
				visu_acl = rw
			[[[[EinAus]]]]
				type = bool
				eval = 1 if sh.WS.Fassade.SperreOst() == 0 and sh.WS.Fassade.Ost.Status() == 1 and sh.WS.UNDLogikSperre() == 0 else 0
				eval_trigger = WS.Fassade.SperreOst | WS.Fassade.Ost.Status | WS.UNDLogik1Sperre
				visu_acl = rw
				enforce_updates = true
		[[[West]]]
			[[[[Status]]]]
				type = bool
				knx_dpt = 1
				knx_cache = 3/0/123
				visu_acl = rw
			[[[[position]]]]
				type = num
				knx_dpt = 5001
				knx_cache = 3/0/120
				knx_send = 3/0/120
				visu_acl = rw
			[[[[angle]]]]
				type = num
				knx_dpt = 5001
				knx_cache = 3/0/121
				knx_send = 3/0/121
				visu_acl = rw
			[[[[EinAus]]]]
				type = bool
				eval = 1 if sh.WS.Fassade.SperreWEG() == 0 and sh.WS.Fassade.West.Status() == 1 and sh.WS.UNDLogikSperre() == 0 else 0
				eval_trigger = WS.Fassade.SperreWEG | WS.Fassade.West.Status | WS.UNDLogik1Sperre
				visu_acl = rw
				enforce_updates = true
		[[[SuedOG]]]
			[[[[Status]]]]
				type = bool
				knx_dpt = 1
				knx_cache = 3/0/143
				visu_acl = rw
			[[[[position]]]]
				type = num
				knx_dpt = 5001
				knx_cache = 3/0/140
				knx_send = 3/0/140
				visu_acl = rw
			[[[[angle]]]]
				type = num
				knx_dpt = 5001
				knx_cache = 3/0/141
				knx_send = 3/0/141
				visu_acl = rw
		[[[WestOG]]]
			[[[[Status]]]]
				type = bool
				knx_dpt = 1
				knx_cache = 3/0/153
				visu_acl = rw
			[[[[position]]]]
				type = num
				knx_dpt = 5001
				knx_cache = 3/0/150
				knx_send = 3/0/150
				visu_acl = rw
			[[[[angle]]]]
				type = num
				knx_dpt = 5001
				knx_cache = 3/0/151
				knx_send = 3/0/151
				visu_acl = rw
		[[[SperreSEG]]]
			type = bool
			knx_dpt = 1
			knx_send = 3/0/162
			knx_cache = 3/0/162
			visu_acl = rw
			[[[[turn]]]]
				type = bool
				eval = 0 if sh.WS.Fassade.SperreSEG() == 1 else 1
				eval_trigger = WS.Fassade.SperreSEG
				enforce_updates = True
		[[[SperreOst]]]
			type = bool
			knx_dpt = 1
			knx_send = 3/0/163
			knx_cache = 3/0/163
			visu_acl = rw
			[[[[turn]]]]
				type = bool
				eval = 0 if sh.WS.Fassade.SperreOst() == 1 else 1
				eval_trigger = WS.Fassade.SperreOst
				enforce_updates = True
		[[[SperreWEG]]]
			type = bool
			knx_dpt = 1
			knx_send = 3/0/164
			knx_cache = 3/0/164
			visu_acl = rw
			[[[[turn]]]]
				type = bool
				eval = 0 if sh.WS.Fassade.SperreWEG() == 1 else 1
				eval_trigger = WS.Fassade.SperreWEG
				enforce_updates = True
		[[[SperreSW]]]
			type = bool
			knx_dpt = 1
			knx_send = 3/0/165
			knx_cache = 3/0/165
			visu_acl = rw
			[[[[turn]]]]
				type = bool
				eval = 0 if sh.WS.Fassade.SperreSW() == 1 else 1
				eval_trigger = WS.Fassade.SperreSW
				enforce_updates = True
		[[[SperreSOG]]]
			type = bool
			knx_dpt = 1
			knx_send = 3/0/166
			knx_cache = 3/0/166
			visu_acl = rw
			[[[[turn]]]]
				type = bool
				eval = 0 if sh.WS.Fassade.SperreSOG() == 1 else 1
				eval_trigger = WS.Fassade.SperreSOG
				enforce_updates = True
		[[[SperreWOG]]]
			type = bool
			knx_dpt = 1
			knx_send = 3/0/167
			knx_cache = 3/0/167
			visu_acl = rw
			[[[[turn]]]]
				type = bool
				eval = 0 if sh.WS.Fassade.SperreWOG() == 1 else 1
				eval_trigger = WS.Fassade.SperreWOG
				enforce_updates = True
	[[Waermeschutz]]
		[[[Status]]]
			type = bool
			knx_dpt = 1
			knx_cache = 3/0/99
			visu_acl = rw
			[[[[Info]]]]
				type = str
				visu_acl = rw
				enfore_updates = yes
		[[[Uhr]]]
			type = foo
			eval = sh.WS.Waermeschutz.last_change()
			eval_trigger = WS.Waermeschutz
			enforce_updates = true
			visu_acl = rw
	[[UNDLogikSperre]]
		type = bool
		knx_dpt = 1
		knx_send = 4/0/1
		knx_cache = 4/0/1
		visu_acl = rw
	[[KWL0]]
		type = bool
		eval = 1 if ((sh.LWZ.roomTempRC() - sh.WS.Temperatur()) < 1) else 0
		eval_trigger = LWZ.roomTempRC | WS.Temperatur
		enforce_updates = true
		cache = True
	[[KWL1]]
		type = bool
		eval = 1 if ((sh.LWZ.roomTempRC() - sh.WS.Temperatur()) >= 1) and ((sh.LWZ.roomTempRC() - sh.WS.Temperatur()) <= 5) else 0
		eval_trigger = LWZ.roomTempRC | WS.Temperatur
		enforce_updates = true
		cache = True
	[[KWL2]]
		type = bool
		eval = 1 if ((sh.LWZ.roomTempRC() - sh.WS.Temperatur()) > 5) else 0
		eval_trigger = LWZ.roomTempRC | WS.Temperatur
		enforce_updates = true
		cache = True
	[[KWLIcon]]
		type = num
		sqlite = yes
		cache = yes
		enforce_updates = true
	[[Mondphase]]
		type = num
		eval = sh.env.location.moonphase()
		eval_trigger = env.location.moonphase
		enforce_updates = true
		visu_acl = rw
		sqlite = yes
		[[[letzte]]]
			type = foo
			eval = sh.WS.Mondphase.last_change()
			eval_trigger = WS.Mondphase
			enforce_updates = true
			visu_acl = rw
		[[[vorletzte]]]
			type = foo
			eval = sh.WS.Mondphase.prev_change()
			eval_trigger = WS.Mondphase
			enforce_updates = true
			visu_acl = rw